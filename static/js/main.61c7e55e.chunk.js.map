{"version":3,"sources":["redux/dialogs-reducer.ts","img/user.jpg","components/Navbar/Navbar.module.css","api/api.ts","components/Users/Users.module.css","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Settings/Settings.tsx","components/Music/Music.tsx","components/News/News.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/user-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","hoc/withSuspense.tsx","App.tsx","AppContainer.tsx","index.tsx","img/preloader.svg","components/common/Preloader/Preloader.tsx","components/common/FormControls/FormControls.module.css","utils/validators/validators.ts","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/common/FormControls/FormControls.tsx","redux/profile-reducer.ts"],"names":["addMessage","newMessageText","type","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","newMessage","Date","getTime","toString","stateCopy","module","exports","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","userId","post","unfollowUser","delete","authAPI","authUser","login","email","password","rememberMe","logout","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","setProfilePhoto","photo","formData","FormData","append","setProfileInfo","profile","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleIsFollowingInProgress","fieldErrors","resultCode","isAuth","setAuthUserData","payload","authentication","dispath","a","res","initialized","rootReducer","combineReducers","dialogsPage","profilePage","profileReducer","usersPage","map","el","followed","filter","auth","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","className","styles","nav","item","active","to","activeClassName","activeLink","Settings","Music","News","Paginator","props","totalItemsCount","portionSize","onPageChanged","pagesCount","Math","ceil","log","pages","i","push","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","selectedPage","allPage","event","User","user","follow","unfollow","containerUser","avatarFollow","avatar","src","photos","small","userImg","alt","disabled","some","description","descriptionUser","userName","userStatus","descriptionLocation","locationCity","locationCountry","Users","container","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","pageNumber","requestUsers","this","Preloader","React","Component","UsersContainer","connect","page","items","totalCount","Header","header","loginBlock","HeaderAPIComponent","HeaderContainer","Input","Element","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","validate","required","component","error","formSummaryError","LoginContainer","messageError","length","stopSubmit","_error","withSuspense","fallback","DialogsContainer","lazy","default","ProfileUserContainer","SuspendedDialogs","SuspendedProfile","App","initializeApp","path","render","withRouter","AppContainer","basename","process","rerenderEntireTree","ReactDOM","document","getElementById","subscribe","preloader","value","maxLengthCreator","maxLength","input","meta","restProps","formControls","touched","addPost","newPostText","setStatus","posts","title","likesCount","profileUser","newPost","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","postId","getProfileUser","getUserStatus","updateUserStatus","large","setProfile","getState"],"mappings":"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","file":"static/js/main.61c7e55e.chunk.js","sourcesContent":["\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id?: string\r\n    message: string\r\n}\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogItemType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\n\r\nexport const addMessage = (newMessageText: string) => {\r\n    return {\r\n        type: \"ADD-MESSAGE\",\r\n        newMessageText\r\n       // newMessageText: store.getState().newMessageText\r\n    } as const\r\n}\r\n\r\nexport const updateNewMessageText = (newText: string) => {\r\n    return {\r\n        type: \"UPDATE-NEW-MESSAGE-TEXT\",\r\n        newText: newText\r\n    } as const\r\n}\r\n\r\nexport type DialogsActionsType =\r\n    ReturnType<typeof addMessage>\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: \"1\", name: \"Marina\"},\r\n        {id: \"2\", name: \"Karina\"},\r\n        {id: \"3\", name: \"Stas\"}\r\n    ] as Array<DialogItemType>,\r\n    messages: [\r\n        {id: \"1\", message: \"Hi\"},\r\n        {id: \"2\", message: \"How are u?\"},\r\n        {id: \"3\", message: \"Yoo\"}\r\n    ] as Array<MessageType>,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: DialogsActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\": {\r\n            let newMessage = {\r\n                id: new Date().getTime().toString(),\r\n                message: action.newMessageText,\r\n            }\r\n            let stateCopy = {...state}\r\n            stateCopy.messages = [...state.messages, newMessage]\r\n            return stateCopy\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/user.079fd078.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2zTuN\",\"item\":\"Navbar_item__3EzTs\",\"activeLink\":\"Navbar_activeLink__2sj_z\"};","import axios from \"axios\";\r\nimport {DataUserLoginType} from \"../redux/auth-reducer\";\r\nimport {ContactsUserType, ProfileUserType} from \"../redux/profile-reducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"2915ec48-57be-426d-903d-1c83b1420c90\"}\r\n})\r\n\r\ntype dataItemUsersType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n    followed: boolean\r\n}\r\n\r\ntype dataUsersType = {\r\n    items: Array<dataItemUsersType>\r\n    totalCount: number\r\n    error: string\r\n}\r\n\r\nexport type ResponseType<T> = {\r\n    data: T\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldErrors: Array<string>\r\n}\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n        return instance.get<dataUsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    followUser(userId: number) {\r\n        return instance.post(`follow/${userId}`, {})\r\n    },\r\n    unfollowUser(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    authUser() {\r\n        return instance.get<ResponseType<DataUserLoginType>>(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<ResponseType<{ userId: number }>>(`auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<ResponseType<{}>>(`auth/login`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId: string) {\r\n        console.warn('Obsolete method. Please use profileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get<ProfileUserType>(`profile/` + userId)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get<string>(`profile/status/` + userId)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ResponseType<{}>>(`profile/status/`, {status})\r\n    },\r\n    setProfilePhoto(photo: any) {\r\n        const formData = new FormData()\r\n        formData.append('image', photo)\r\n        return instance.put<ResponseType<{ small: string, large: string }>>(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    setProfileInfo(profile: ProfileUserType) {\r\n        return instance.put<ResponseType<{}>>(`profile/`, profile)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__1c13l\",\"containerUser\":\"Users_containerUser__3-APU\",\"avatarFollow\":\"Users_avatarFollow__9kTuf\",\"avatar\":\"Users_avatar__BxG5U\",\"description\":\"Users_description__2a1W4\",\"descriptionUser\":\"Users_descriptionUser__2F8j7\",\"userName\":\"Users_userName__2mkHw\",\"userStatus\":\"Users_userStatus__o5Acw\",\"descriptionLocation\":\"Users_descriptionLocation___Xsmk\",\"locationCity\":\"Users_locationCity__1vJoB\",\"locationCountry\":\"Users_locationCountry__3QNBs\",\"selectedPage\":\"Users_selectedPage__3Z69Y\",\"allPage\":\"Users_allPage__qdtl_\"};","import {userAPI} from \"../api/api\";\r\nimport {AppThunk} from \"./redux-store\";\r\n\r\nexport type LocationUserType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UserType = {\r\n    id: number\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n}\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 50,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>,\r\n}\r\n\r\nexport type InitialStateUsersType = typeof initialState\r\n\r\nexport const followUser = (id: string) => {\r\n    return {\r\n        type: \"FOLLOW\",\r\n        id\r\n    } as const\r\n}\r\n\r\nexport const unfollowUser = (id: string) => {\r\n    return {\r\n        type: \"UNFOLLOW\",\r\n        id\r\n    } as const\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {\r\n        type: \"SET-USERS\",\r\n        users\r\n    } as const\r\n}\r\n\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: \"SET-CURRENT-PAGE\",\r\n        currentPage\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n    return {\r\n        type: \"SET-TOTAL-USERS-COUNT\",\r\n        totalUsersCount\r\n    } as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: \"SET-TOGGLE-IS-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\nexport const toggleIsFollowingInProgress = (userId: number, isFetching: boolean) => {\r\n    return {\r\n        type: \"SET-TOGGLE-IS-FOLLOWING-PROGRESS\",\r\n        userId,\r\n        isFetching,\r\n    } as const\r\n}\r\n\r\nexport type UsersActionsType =\r\n    ReturnType<typeof followUser>\r\n    | ReturnType<typeof unfollowUser>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleIsFollowingInProgress>\r\n\r\n\r\nexport const usersReducer = (state: InitialStateUsersType = initialState, action: UsersActionsType): InitialStateUsersType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(el => {\r\n                    if (el.id.toString() === action.id) {\r\n                        return {...el, followed: true}\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        }\r\n        case \"UNFOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(el => {\r\n                    if (el.id.toString() === action.id) {\r\n                        return {...el, followed: false}\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        }\r\n        case \"SET-USERS\": {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\": {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case \"SET-TOTAL-USERS-COUNT\": {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case \"SET-TOGGLE-IS-FETCHING\": {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case \"SET-TOGGLE-IS-FOLLOWING-PROGRESS\": {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number): AppThunk => async dispath => {\r\n    dispath(toggleIsFetching(true))\r\n    dispath(setCurrentPage(page))\r\n    const res = await userAPI.getUsers(page, pageSize)\r\n    dispath(toggleIsFetching(false))\r\n    dispath(setUsers(res.items))\r\n    dispath(setTotalUsersCount(res.totalCount))\r\n}\r\n\r\nexport const unfollow = (userId: number): AppThunk => async dispath => {\r\n    dispath(toggleIsFetching(true))\r\n    const res = await userAPI.unfollowUser(userId)\r\n    if (res.data.resultCode === 0) {\r\n        dispath(unfollowUser(userId.toString()))\r\n    }\r\n    dispath(toggleIsFollowingInProgress(userId, false))\r\n    dispath(toggleIsFetching(false))\r\n}\r\n\r\nexport const follow = (userId: number): AppThunk => async dispath => {\r\n    dispath(toggleIsFetching(true))\r\n    const res = await userAPI.followUser(userId)\r\n    if (res.data.resultCode === 0) {\r\n        dispath(followUser(userId.toString()))\r\n    }\r\n    dispath(toggleIsFollowingInProgress(userId, false))\r\n    dispath(toggleIsFetching(false))\r\n}\r\n","import {AppThunk} from \"./redux-store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {FormAction} from \"redux-form/lib/actions\";\r\n\r\nexport type DataUserLoginType = {\r\n    id: number\r\n    login: string\r\n    email: string\r\n}\r\n\r\nlet initialState = {\r\n    data: {\r\n        id: 0,\r\n        login: \"\",\r\n        email: \"\"\r\n    } as DataUserLoginType,\r\n    messages: [] as Array<string>,\r\n    fieldErrors: [] as Array<string>,\r\n    resultCode: 0,\r\n    isAuth: false\r\n}\r\n\r\nexport type InitialStateUsersType = typeof initialState\r\n\r\nexport const setAuthUserData = (id: number, login: string, email: string, isAuth: boolean) => {\r\n    return {\r\n        type: \"SET-USER-DATA\",\r\n        payload: {id, login, email, isAuth}\r\n    } as const\r\n}\r\n\r\n\r\nexport type AuthUsersActionsType =\r\n    ReturnType<typeof setAuthUserData>\r\n    | FormAction\r\n\r\n\r\nexport const authReducer = (state: InitialStateUsersType = initialState, action: AuthUsersActionsType): InitialStateUsersType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\": {\r\n            return {\r\n                ...state,\r\n                data: {...action.payload},\r\n                isAuth: action.payload.isAuth,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const authentication = (): AppThunk =>\r\n    async dispath => {\r\n        const res = await authAPI.authUser()\r\n        if (res.resultCode === 0) {\r\n            let {id, login, email} = res.data\r\n            dispath(setAuthUserData(id, login, email, true))\r\n        }\r\n    }\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunk =>\r\n    async dispath => {\r\n    const res = await authAPI.login(email, password, rememberMe)\r\n        if (res.resultCode === 0) {\r\n            dispath(authentication())\r\n        } else {\r\n            const messageError = res.messages.length > 0 ? res.messages[0] : \"Some error\"\r\n            dispath(stopSubmit(\"login\", {_error: messageError}))\r\n        }\r\n    }\r\n\r\nexport const logout = (): AppThunk =>\r\n    async dispath => {\r\n        const res = await authAPI.logout()\r\n        if (res.resultCode === 0) {\r\n            dispath(setAuthUserData(0, \"\", \"\", false))\r\n        }\r\n    }\r\n\r\n\r\n\r\n","import {AppThunk} from \"./redux-store\";\r\nimport {authentication} from \"./auth-reducer\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateUsersType = typeof initialState\r\n\r\nexport const setInitialized = () => {\r\n    return {\r\n        type: \"SET-INITIALIZED\"\r\n    } as const\r\n}\r\n\r\n\r\nexport type AuthAppActionsType =\r\n    ReturnType<typeof setInitialized>\r\n\r\n\r\nexport const appReducer = (state: InitialStateUsersType = initialState, action: AuthAppActionsType): InitialStateUsersType => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALIZED\": {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializeApp = (): AppThunk => dispath => {\r\n    dispath(authentication())\r\n    dispath(setInitialized())\r\n}\r\n\r\n\r\n","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\"\r\nimport {ProfileActionsType, profileReducer} from \"./profile-reducer\";\r\nimport {DialogsActionsType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {UsersActionsType, usersReducer} from \"./users-reducer\";\r\nimport {authReducer, AuthUsersActionsType} from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer, AuthAppActionsType} from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type GetAppStateType = () => AppStateType;\r\n\r\nexport type AppActionType = ProfileActionsType | DialogsActionsType | UsersActionsType | AuthUsersActionsType | AuthAppActionsType\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n    }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//export let store: Store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AppActionType>\r\n\r\n//@ts-ignore\r\nwindow.__store__ = store;\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Navbar.module.css\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n                <NavLink to=\"/profile\" activeClassName={styles.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"/news\" activeClassName={styles.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={styles.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"/music\" activeClassName={styles.activeLink}>Music</NavLink>\r\n            </div>\r\n            {/*<div className={styles.item}>*/}\r\n            {/*    <NavLink to=\"/saved\">Saved</NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={styles.item}>\r\n                <NavLink to=\"/settings\" activeClassName={styles.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"/users\" activeClassName={styles.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport function News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\"\r\n\r\ntype dataPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nexport const Paginator: React.FC<dataPropsType> = props => {\r\n\r\n    const {\r\n        totalItemsCount,\r\n        pageSize,\r\n        currentPage,\r\n        portionSize = 10,\r\n        onPageChanged,\r\n    } = props\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    console.log(pagesCount)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = (portionNumber) * portionSize\r\n\r\n    return <div>\r\n        <button onClick={() => {setPortionNumber(portionNumber-1)}}>prev</button>\r\n            {pages.filter(p => p>=leftPortionPageNumber && p<=rightPortionPageNumber && p).map(p => {\r\n                return <span className={currentPage === p ? styles.selectedPage : styles.allPage}\r\n                             onClick={(event) => onPageChanged(p)}>{p}</span>\r\n            })}\r\n        <button onClick={() => {setPortionNumber(portionNumber+1)}}>next</button>\r\n        </div>\r\n}\r\n","import React from \"react\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport userImg from \"../../img/user.jpg\";\r\nimport styles from \"./Users.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype dataPropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    follow: (id: string) => void\r\n    unfollow: (id: string) => void\r\n}\r\n\r\nexport const User: React.FC<dataPropsType> = props => {\r\n\r\n    const {\r\n        user,\r\n        follow,\r\n        unfollow,\r\n        followingInProgress,\r\n    } = props\r\n\r\n    return <div key={user.id} className={styles.containerUser}>\r\n        <div className={styles.avatarFollow}>\r\n            <div>\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <img className={styles.avatar} src={user.photos.small !== null ? user.photos.small : userImg}\r\n                         alt={\"Avatar\" + user.name}/>\r\n                </NavLink>\r\n            </div>\r\n            {user.followed ?\r\n                <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                    unfollow(user.id.toString())\r\n                }}>Unfollow</button> :\r\n                <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                    follow(user.id.toString())\r\n                }}>Follow</button>}\r\n        </div>\r\n        <div className={styles.description}>\r\n            <div className={styles.descriptionUser}>\r\n                <span className={styles.userName}>{user.name}</span>\r\n                <span className={styles.userStatus}>{user.status}</span>\r\n            </div>\r\n            <div className={styles.descriptionLocation}>\r\n                <span className={styles.locationCity}>{\"user.location.city\"}</span>\r\n                <span className={styles.locationCountry}>{\"user.location.country\"}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n","import React from \"react\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport styles from \"./Users.module.css\"\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\nimport {AppThunk} from \"../../redux/redux-store\";\r\n\r\ntype dataPropsType = {\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    followingInProgress: Array<number>\r\n    onPageChanged: (pageNumber: number) => void\r\n    follow: (id: string) => AppThunk\r\n    unfollow: (id: string) => AppThunk\r\n}\r\n\r\nexport const Users: React.FC<dataPropsType> = props => {\r\n\r\n    const {\r\n        users,\r\n        totalUsersCount,\r\n        pageSize,\r\n        currentPage,\r\n        onPageChanged,\r\n        follow,\r\n        unfollow,\r\n    } = props\r\n\r\n    return <div className={styles.container}>\r\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage} portionSize={15}\r\n                   onPageChanged={onPageChanged}/>\r\n        {users.map(user => <User user={user} followingInProgress={props.followingInProgress} follow={follow}\r\n                                 unfollow={unfollow}/>)}\r\n    </div>\r\n}\r\n\r\n","import {AppStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\nimport {UserType} from \"./users-reducer\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users: Array<UserType>) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSizeSelector = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getPageSize = createSelector(getPageSizeSelector, (pageSize: number) => {\r\n    return pageSize\r\n})\r\n\r\nexport const getTotalUsersCountSelector = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getTotalUsersCount = createSelector(getTotalUsersCountSelector, (totalUsersCount: number) => {\r\n    return totalUsersCount\r\n})\r\n\r\nexport const getCurrentPageSelector = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getCurrentPage = createSelector(getCurrentPageSelector, (currentPage: number) => {\r\n    return currentPage\r\n})\r\n\r\nexport const getIsFetchingSelector = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getIsFetching = createSelector(getIsFetchingSelector, (isFetching: boolean) => {\r\n    return isFetching\r\n})\r\n\r\nexport const getFollowingInProgressSelector = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getFollowingInProgress = createSelector(getFollowingInProgressSelector, (followingInProgress: Array<number>) => {\r\n    return followingInProgress.filter(u => true)\r\n})\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {AppStateType, AppThunk} from \"../../redux/redux-store\";\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage, unfollow,UserType\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/user-selectors\";\r\n\r\ntype dataPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    follow: (id: string) => AppThunk\r\n    unfollow: (id: string) => AppThunk\r\n    setCurrentPage: (currentPage: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nclass UsersAPIComponent extends React.Component<dataPropsType, AppStateType> {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users users={this.props.users} onPageChanged={this.onPageChanged} currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   follow={this.props.follow} unfollow={this.props.unfollow}/>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n// export const UsersContainer = connect(mapStateToProps, {followUser, unfollowUser, setCurrentPage, getUsers})(UsersAPIComponent)\r\n\r\nexport const UsersContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        requestUsers\r\n    }),\r\n    //withAuthRedirect\r\n)(UsersAPIComponent)","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Header.module.css\";\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n    logout: () => void\r\n}\r\n\r\nexport const Header = (props: PropsType) => {\r\n    return (\r\n        <header className={styles.header}>\r\n            <img src=\"https://i.stack.imgur.com/dDQbw.png\" alt=\"\"/>\r\n            <div className={styles.loginBlock}>\r\n                {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>:\r\n                    <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {DataUserLoginType, logout} from \"../../redux/auth-reducer\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype dataPropsType = {\r\n    data: DataUserLoginType\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldErrors: Array<string>\r\n    isAuth: boolean\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderAPIComponent extends React.Component<dataPropsType, AppStateType>{\r\n\r\n\r\n    render() {\r\n        return <Header isAuth={this.props.isAuth} login={this.props.data.login} logout={this.props.logout}/>;\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        data: state.auth.data,\r\n        messages: state.auth.messages,\r\n        resultCode: state.auth.resultCode,\r\n        fieldErrors: state.auth.fieldErrors,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const HeaderContainer = connect(mapStateToProps, {logout})(HeaderAPIComponent)\r\n","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../common/FormControls/FormControls.module.css\"\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\nconst Input = Element(\"input\")\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} validate={[required]} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} validate={[required]} type={\"password\"} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/> Remember me\r\n            </div>\r\n            {props.error && <div className={styles.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nexport const Login:React.FC<PropsType> = (props) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        console.log(formData)\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const LoginContainer = connect(mapStateToProps, {login})(Login)","import React, {ComponentType, Suspense} from \"react\";\r\nimport {Preloader} from \"../components/common/Preloader/Preloader\";\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n    return (props: T) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}","import React, {lazy} from 'react';\r\nimport './App.css';\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {Music} from './components/Music/Music';\r\nimport {News} from './components/News/News';\r\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\r\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\r\nimport {LoginContainer} from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {AppStateType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nconst DialogsContainer = lazy(() =>\r\n    import('./components/Dialogs/DialogsContainer')\r\n        .then(({ DialogsContainer }) => ({ default: DialogsContainer })),\r\n);\r\nconst ProfileUserContainer = lazy(() =>\r\n    import('./components/Description/ProfileContainer')\r\n        .then(({ ProfileUserContainer }) => ({ default: ProfileUserContainer })),\r\n);\r\n\r\ntype mapStatePropsType = {\r\n    initialized: boolean\r\n}\r\ntype mapDispatchPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\ntype AppPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\nconst SuspendedDialogs = withSuspense(DialogsContainer)\r\nconst SuspendedProfile = withSuspense(ProfileUserContainer)\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={\"app-wrapper-content\"}>\r\n                    <Route path={\"/dialogs\"} render={ () => <SuspendedDialogs />}/>\r\n                    <Route path={\"/users\"} render={() => <UsersContainer/>}/>\r\n                    <Route path={\"/profile/:userId?\"} render={() => <SuspendedProfile />}/>\r\n                    <Route path={\"/news\"} render={() => <News/>}/>\r\n                    <Route path={\"/music\"} render={() => <Music/>}/>\r\n                    <Route path={\"/settings\"} render={() => <Settings/>}/>\r\n                    <Route path={\"/login\"} render={() => <LoginContainer/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, {initializeApp}), withRouter)(App);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\nexport const AppContainer = () => {\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {store} from './redux/redux-store';\r\nimport {AppContainer} from \"./AppContainer\";\r\n\r\n\r\nexport const rerenderEntireTree = () => {\r\n    ReactDOM.render(<AppContainer/>, document.getElementById('root'));\r\n}\r\nrerenderEntireTree();\r\nstore.subscribe(rerenderEntireTree);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.8ab66502.svg\";","import preloader from \"../../../img/preloader.svg\"\r\nimport React from \"react\";\r\n\r\nexport const Preloader: React.FC = props => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt={\"#\"}/>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__2zjtO\",\"error\":\"FormControls_error__1uU6S\",\"formSummaryError\":\"FormControls_formSummaryError__1VSUF\"};","export const required = (value: string) => {\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__LJVga\",\"allPage\":\"Paginator_allPage__1MOLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__yLEaV\",\"loginBlock\":\"Header_loginBlock__1yJqm\"};","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\nexport const Element = (Element: string) => (props: any) => {\r\n    const {\r\n        input,\r\n        meta,\r\n        ...restProps\r\n    } = props\r\n    return (\r\n        <div className={styles.formControls + \" \" + ((meta.touched && meta.error)? styles.error : \"\")}>\r\n            <Element {...input} {...restProps}></Element>\r\n            {meta.touched && meta.error && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {AppThunk, GetAppStateType} from \"./redux-store\";\r\nimport {authAPI, profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport type PostType = {\r\n    id?: string\r\n    title: string\r\n    likesCount: number\r\n}\r\nexport type ContactsUserType = {\r\n    facebook: string | null\r\n    website: string | null\r\n    vk: string | null\r\n    twitter: string | null\r\n    instagram: string | null\r\n    youtube: string | null\r\n    github: string | null\r\n    mainLink: string | null\r\n}\r\nexport type PhotosUserType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileUserType = {\r\n    aboutMe: string\r\n    contacts: ContactsUserType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: PhotosUserType\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    profileUser: ProfileUserType\r\n    newPostText: string\r\n    status: string\r\n}\r\n\r\nexport const addPost = (newPostText: string) => {\r\n    return {\r\n        type: \"ADD-POST\",\r\n        newPostText\r\n    } as const\r\n}\r\n\r\nexport const deletePost = (postId: string) => {\r\n    return {\r\n        type: \"DELETE-POST\",\r\n        postId\r\n    } as const\r\n}\r\n\r\nexport const setUserProfile = (profileUser: ProfileUserType) => {\r\n    return {\r\n        type: \"SET-USER-PROFILE\",\r\n        profileUser\r\n    } as const\r\n}\r\n\r\nexport const setProfilePhotoSuccess = (photos: PhotosUserType) => {\r\n    return {\r\n        type: \"SET-PROFILE-PHOTO\",\r\n        photos\r\n    } as const\r\n}\r\n\r\nexport const setProfileSuccess = (profile: ProfileUserType) => {\r\n    return {\r\n        type: \"SET-PROFILE\",\r\n        profile\r\n    } as const\r\n}\r\n\r\nexport const setStatus = (status: string) => {\r\n    return {\r\n        type: \"SET-STATUS\",\r\n        status\r\n    } as const\r\n}\r\n\r\nexport type ProfileActionsType =\r\n    ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof setProfilePhotoSuccess>\r\n    | ReturnType<typeof deletePost>\r\n    | ReturnType<typeof setProfileSuccess>\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: \"1\", title: \"Hello\", likesCount: 5},\r\n        {id: \"2\", title: \"How are u?\", likesCount: 6},\r\n        {id: \"3\", title: \"Fine\", likesCount: 4},\r\n        {id: \"4\", title: \"Thank u\", likesCount: 10}\r\n    ] as Array<PostType>,\r\n    profileUser: {} as ProfileUserType,\r\n    status: \"hey\",\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\": {\r\n            let newPost = {\r\n                id: new Date().getTime().toString(),\r\n                title: action.newPostText,\r\n                likesCount: 0,\r\n            }\r\n            let stateCopy = {...state}\r\n            stateCopy.posts = [...state.posts, newPost]\r\n            return stateCopy\r\n        }\r\n        case \"SET-USER-PROFILE\": {\r\n            return {\r\n                ...state,\r\n                profileUser: action.profileUser\r\n            }\r\n        }\r\n        case \"SET-STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case \"SET-PROFILE-PHOTO\": {\r\n            return {\r\n                ...state,\r\n                profileUser: {...state.profileUser, photos: action.photos}\r\n\r\n            }\r\n        }\r\n        case \"SET-PROFILE\": {\r\n            return {\r\n                ...state,\r\n                profileUser: {...state.profileUser, fullName: action.profile.fullName, aboutMe: action.profile.aboutMe, lookingForAJob: action.profile.lookingForAJob, lookingForAJobDescription: action.profile.lookingForAJobDescription, contacts: action.profile.contacts}\r\n\r\n            }\r\n        }\r\n        case \"DELETE-POST\": {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getProfileUser = (userId: string): AppThunk => async dispath => {\r\n    const res = await authAPI.getProfile(userId.toString())\r\n    dispath(setUserProfile(res))\r\n}\r\nexport const getUserStatus = (userId: string): AppThunk => async dispath => {\r\n    const res = await profileAPI.getStatus(userId.toString())\r\n    dispath(setStatus(res))\r\n}\r\nexport const updateUserStatus = (status: string): AppThunk => async dispath => {\r\n    const res = await profileAPI.updateStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispath(setStatus(status))\r\n    }\r\n}\r\nexport const setProfilePhoto = (photo: File): AppThunk => async dispath => {\r\n    const res = await profileAPI.setProfilePhoto(photo)\r\n    if (res.data.resultCode === 0) {\r\n        debugger\r\n        dispath(setProfilePhotoSuccess({small: res.data.data.small, large: res.data.data.large}))\r\n    }\r\n}\r\nexport const setProfile = (profile: ProfileUserType): AppThunk => async (dispath, getState: GetAppStateType) => {\r\n    const userId = getState().auth.data.id\r\n    const res = await profileAPI.setProfileInfo(profile)\r\n    if (res.data.resultCode === 0) {\r\n        debugger\r\n        dispath(getProfileUser(userId.toString()))\r\n    } else {\r\n        dispath(stopSubmit(\"edit-profile\", {_error: res.data.messages[0]}))\r\n    }\r\n}\r\n"],"sourceRoot":""}